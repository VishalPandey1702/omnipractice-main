<!-- ---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import { readCurrentUser } from "../services/currentUser";

const currentUser = await readCurrentUser(Astro.request);
---

<Layout title="Welcome to Astro." currentUser={currentUser}>
  <main>
    <h1>Welcome to <span class="text-gradient">OmniPractice</span></h1>
    
    <ul role="list" class="link-card-grid">
      <Card href="/posts" title="Posts" body="All Posts" />
      <Card
        href="/login"
        title="Sign in"
        body="Login here using credentiial"
      />

      <Card
        href="/add_posts"
        title="Add Posts"
        body="Add more Posts."
      />
      <Card
        href="/update_posts"
        title="Update/Delete Posts"
        body="Update Posts"
      />
    </ul>
  </main>
</Layout>

<style>
  :root {
    --astro-gradient: linear-gradient(0deg, #4f39fa, #da62c4);
  }

  h1 {
    margin: 2rem 0;
  }

  main {
    margin: auto;
    padding: 1em;
    max-width: var(--measure);
  }

  .text-gradient {
    font-weight: 900;
    background-image: var(--astro-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 100% 200%;
    background-position-y: 100%;
    border-radius: 0.4rem;
    animation: pulse 4s ease-in-out infinite;
  }

  @keyframes pulse {
    0%,
    100% {
      background-position-y: 0%;
    }
    50% {
      background-position-y: 80%;
    }
  }

  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    background: #4f39fa;
    padding: 1rem;
    border-radius: 0.4rem;
    color: var(--color-bg);
  }

  .instructions code {
    font-size: 0.875em;
    border: 0.1em solid var(--color-border);
    border-radius: 4px;
    padding: 0.15em 0.25em;
  }

  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
</style> -->



---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import { readCurrentUser } from "../services/currentUser";

// Fetch the current user information
const currentUser = await readCurrentUser(Astro.request);
const isLoggedIn = currentUser !== null; // Assuming 'null' means the user is not logged in
---

<Layout title="Welcome to Astro." currentUser={currentUser}>
  <main>
    <h1>Welcome to <span class="text-gradient">OmniPractice</span></h1>
    
    <ul role="list" class="link-card-grid">
      <Card href="/posts" title="Posts" body="All Posts" />
      
      {isLoggedIn ? (
        <>
          <Card href="/add_posts" title="Add Posts" body="Add more Posts." />
          <Card href="/update_posts" title="Update/Delete Posts" body="Update Posts" />
        </>
      ) : (
        <Card href="/login" title="Sign in" body="Login here using credentials" />
      )}
    </ul>
  </main>
</Layout>

<style>
  :root {
    --astro-gradient: linear-gradient(0deg, #4f39fa, #da62c4);
  }

  h1 {
    margin: 2rem 0;
  }

  main {
    margin: auto;
    padding: 1em;
    max-width: var(--measure);
  }

  .text-gradient {
    font-weight: 900;
    background-image: var(--astro-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 100% 200%;
    background-position-y: 100%;
    border-radius: 0.4rem;
    animation: pulse 4s ease-in-out infinite;
  }

  @keyframes pulse {
    0%,
    100% {
      background-position-y: 0%;
    }
    50% {
      background-position-y: 80%;
    }
  }

  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    background: #4f39fa;
    padding: 1rem;
    border-radius: 0.4rem;
    color: var(--color-bg);
  }

  .instructions code {
    font-size: 0.875em;
    border: 0.1em solid var(--color-border);
    border-radius: 4px;
    padding: 0.15em 0.25em;
  }

  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
</style>